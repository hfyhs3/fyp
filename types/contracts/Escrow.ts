/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface EscrowInterface extends utils.Interface {
  functions: {
    "approveCampaign(uint256)": FunctionFragment;
    "calculateTotalContributionsForMilestone(uint256,uint256)": FunctionFragment;
    "campaignContributions(uint256,address)": FunctionFragment;
    "campaigns(uint256)": FunctionFragment;
    "checkAndAdvanceMilestone(uint256)": FunctionFragment;
    "contributeToCampaign(uint256)": FunctionFragment;
    "createCampaign(address,uint256,uint256)": FunctionFragment;
    "daoAddress()": FunctionFragment;
    "escAccount()": FunctionFragment;
    "getCampaignStatus(uint256)": FunctionFragment;
    "getDaoAddress()": FunctionFragment;
    "getMilestoneCount(uint256)": FunctionFragment;
    "getMilestoneDetails(uint256,uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "rejectCampaign(uint256)": FunctionFragment;
    "releaseMilestone(uint256,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setDAOAddress(address)": FunctionFragment;
    "setMilestoneStatus(uint256,uint256,uint8)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "approveCampaign"
      | "calculateTotalContributionsForMilestone"
      | "campaignContributions"
      | "campaigns"
      | "checkAndAdvanceMilestone"
      | "contributeToCampaign"
      | "createCampaign"
      | "daoAddress"
      | "escAccount"
      | "getCampaignStatus"
      | "getDaoAddress"
      | "getMilestoneCount"
      | "getMilestoneDetails"
      | "owner"
      | "rejectCampaign"
      | "releaseMilestone"
      | "renounceOwnership"
      | "setDAOAddress"
      | "setMilestoneStatus"
      | "transferOwnership"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "approveCampaign",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "calculateTotalContributionsForMilestone",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "campaignContributions",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "campaigns",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkAndAdvanceMilestone",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "contributeToCampaign",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createCampaign",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "daoAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "escAccount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCampaignStatus",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDaoAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMilestoneCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getMilestoneDetails",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rejectCampaign",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "releaseMilestone",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setDAOAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setMilestoneStatus",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "approveCampaign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "calculateTotalContributionsForMilestone",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "campaignContributions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "campaigns", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "checkAndAdvanceMilestone",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contributeToCampaign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createCampaign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "daoAddress", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "escAccount", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCampaignStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDaoAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMilestoneCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMilestoneDetails",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rejectCampaign",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "releaseMilestone",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDAOAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMilestoneStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "AllMilestonesReceived(uint256)": EventFragment;
    "CampaignCompleted(uint256)": EventFragment;
    "CampaignCreated(uint256,address,uint256)": EventFragment;
    "CampaignStatusChanged(uint256,uint8)": EventFragment;
    "ContributionReceived(address,uint256,uint256)": EventFragment;
    "MilestoneReached(uint256,uint256)": EventFragment;
    "MilestoneUpdated(uint256,uint256,uint8)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "RefundIssued(uint256,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AllMilestonesReceived"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CampaignCompleted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CampaignCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CampaignStatusChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ContributionReceived"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MilestoneReached"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MilestoneUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RefundIssued"): EventFragment;
}

export interface AllMilestonesReceivedEventObject {
  campaignId: BigNumber;
}
export type AllMilestonesReceivedEvent = TypedEvent<
  [BigNumber],
  AllMilestonesReceivedEventObject
>;

export type AllMilestonesReceivedEventFilter =
  TypedEventFilter<AllMilestonesReceivedEvent>;

export interface CampaignCompletedEventObject {
  campaignId: BigNumber;
}
export type CampaignCompletedEvent = TypedEvent<
  [BigNumber],
  CampaignCompletedEventObject
>;

export type CampaignCompletedEventFilter =
  TypedEventFilter<CampaignCompletedEvent>;

export interface CampaignCreatedEventObject {
  campaignId: BigNumber;
  beneficiary: string;
  totalAmount: BigNumber;
}
export type CampaignCreatedEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  CampaignCreatedEventObject
>;

export type CampaignCreatedEventFilter = TypedEventFilter<CampaignCreatedEvent>;

export interface CampaignStatusChangedEventObject {
  campaignId: BigNumber;
  status: number;
}
export type CampaignStatusChangedEvent = TypedEvent<
  [BigNumber, number],
  CampaignStatusChangedEventObject
>;

export type CampaignStatusChangedEventFilter =
  TypedEventFilter<CampaignStatusChangedEvent>;

export interface ContributionReceivedEventObject {
  contributor: string;
  amount: BigNumber;
  campaignId: BigNumber;
}
export type ContributionReceivedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  ContributionReceivedEventObject
>;

export type ContributionReceivedEventFilter =
  TypedEventFilter<ContributionReceivedEvent>;

export interface MilestoneReachedEventObject {
  campaignId: BigNumber;
  milestoneIndex: BigNumber;
}
export type MilestoneReachedEvent = TypedEvent<
  [BigNumber, BigNumber],
  MilestoneReachedEventObject
>;

export type MilestoneReachedEventFilter =
  TypedEventFilter<MilestoneReachedEvent>;

export interface MilestoneUpdatedEventObject {
  campaignId: BigNumber;
  milestoneIndex: BigNumber;
  status: number;
}
export type MilestoneUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber, number],
  MilestoneUpdatedEventObject
>;

export type MilestoneUpdatedEventFilter =
  TypedEventFilter<MilestoneUpdatedEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface RefundIssuedEventObject {
  id: BigNumber;
  contributor: string;
  refundAmt: BigNumber;
}
export type RefundIssuedEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  RefundIssuedEventObject
>;

export type RefundIssuedEventFilter = TypedEventFilter<RefundIssuedEvent>;

export interface Escrow extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: EscrowInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    approveCampaign(
      _campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    calculateTotalContributionsForMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    campaignContributions(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    campaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, BigNumber, number, BigNumber] & {
        id: BigNumber;
        beneficiary: string;
        totalAmount: BigNumber;
        status: number;
        currentIndex: BigNumber;
      }
    >;

    checkAndAdvanceMilestone(
      campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    contributeToCampaign(
      _campaignId: BigNumberish,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<ContractTransaction>;

    createCampaign(
      _beneficiary: string,
      _totalAmount: BigNumberish,
      _milestoneCount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    daoAddress(overrides?: CallOverrides): Promise<[string]>;

    escAccount(overrides?: CallOverrides): Promise<[string]>;

    getCampaignStatus(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getDaoAddress(overrides?: CallOverrides): Promise<[string]>;

    getMilestoneCount(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMilestoneDetails(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, number] & { amount: BigNumber; status: number }>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    rejectCampaign(
      _campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    releaseMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setDAOAddress(
      _daoAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setMilestoneStatus(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      _status: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  approveCampaign(
    _campaignId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  calculateTotalContributionsForMilestone(
    _campaignId: BigNumberish,
    _milestoneIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  campaignContributions(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  campaigns(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, BigNumber, number, BigNumber] & {
      id: BigNumber;
      beneficiary: string;
      totalAmount: BigNumber;
      status: number;
      currentIndex: BigNumber;
    }
  >;

  checkAndAdvanceMilestone(
    campaignId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  contributeToCampaign(
    _campaignId: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractTransaction>;

  createCampaign(
    _beneficiary: string,
    _totalAmount: BigNumberish,
    _milestoneCount: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  daoAddress(overrides?: CallOverrides): Promise<string>;

  escAccount(overrides?: CallOverrides): Promise<string>;

  getCampaignStatus(
    _campaignId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getDaoAddress(overrides?: CallOverrides): Promise<string>;

  getMilestoneCount(
    _campaignId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMilestoneDetails(
    _campaignId: BigNumberish,
    _milestoneIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, number] & { amount: BigNumber; status: number }>;

  owner(overrides?: CallOverrides): Promise<string>;

  rejectCampaign(
    _campaignId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  releaseMilestone(
    _campaignId: BigNumberish,
    _milestoneIndex: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setDAOAddress(
    _daoAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setMilestoneStatus(
    _campaignId: BigNumberish,
    _milestoneIndex: BigNumberish,
    _status: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    approveCampaign(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    calculateTotalContributionsForMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    campaignContributions(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    campaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, BigNumber, number, BigNumber] & {
        id: BigNumber;
        beneficiary: string;
        totalAmount: BigNumber;
        status: number;
        currentIndex: BigNumber;
      }
    >;

    checkAndAdvanceMilestone(
      campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    contributeToCampaign(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createCampaign(
      _beneficiary: string,
      _totalAmount: BigNumberish,
      _milestoneCount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    daoAddress(overrides?: CallOverrides): Promise<string>;

    escAccount(overrides?: CallOverrides): Promise<string>;

    getCampaignStatus(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getDaoAddress(overrides?: CallOverrides): Promise<string>;

    getMilestoneCount(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMilestoneDetails(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, number] & { amount: BigNumber; status: number }>;

    owner(overrides?: CallOverrides): Promise<string>;

    rejectCampaign(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    releaseMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setDAOAddress(
      _daoAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setMilestoneStatus(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      _status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AllMilestonesReceived(uint256)"(
      campaignId?: BigNumberish | null
    ): AllMilestonesReceivedEventFilter;
    AllMilestonesReceived(
      campaignId?: BigNumberish | null
    ): AllMilestonesReceivedEventFilter;

    "CampaignCompleted(uint256)"(
      campaignId?: BigNumberish | null
    ): CampaignCompletedEventFilter;
    CampaignCompleted(
      campaignId?: BigNumberish | null
    ): CampaignCompletedEventFilter;

    "CampaignCreated(uint256,address,uint256)"(
      campaignId?: BigNumberish | null,
      beneficiary?: string | null,
      totalAmount?: null
    ): CampaignCreatedEventFilter;
    CampaignCreated(
      campaignId?: BigNumberish | null,
      beneficiary?: string | null,
      totalAmount?: null
    ): CampaignCreatedEventFilter;

    "CampaignStatusChanged(uint256,uint8)"(
      campaignId?: BigNumberish | null,
      status?: null
    ): CampaignStatusChangedEventFilter;
    CampaignStatusChanged(
      campaignId?: BigNumberish | null,
      status?: null
    ): CampaignStatusChangedEventFilter;

    "ContributionReceived(address,uint256,uint256)"(
      contributor?: string | null,
      amount?: null,
      campaignId?: BigNumberish | null
    ): ContributionReceivedEventFilter;
    ContributionReceived(
      contributor?: string | null,
      amount?: null,
      campaignId?: BigNumberish | null
    ): ContributionReceivedEventFilter;

    "MilestoneReached(uint256,uint256)"(
      campaignId?: BigNumberish | null,
      milestoneIndex?: null
    ): MilestoneReachedEventFilter;
    MilestoneReached(
      campaignId?: BigNumberish | null,
      milestoneIndex?: null
    ): MilestoneReachedEventFilter;

    "MilestoneUpdated(uint256,uint256,uint8)"(
      campaignId?: BigNumberish | null,
      milestoneIndex?: null,
      status?: null
    ): MilestoneUpdatedEventFilter;
    MilestoneUpdated(
      campaignId?: BigNumberish | null,
      milestoneIndex?: null,
      status?: null
    ): MilestoneUpdatedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "RefundIssued(uint256,address,uint256)"(
      id?: null,
      contributor?: null,
      refundAmt?: null
    ): RefundIssuedEventFilter;
    RefundIssued(
      id?: null,
      contributor?: null,
      refundAmt?: null
    ): RefundIssuedEventFilter;
  };

  estimateGas: {
    approveCampaign(
      _campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    calculateTotalContributionsForMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    campaignContributions(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    campaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkAndAdvanceMilestone(
      campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    contributeToCampaign(
      _campaignId: BigNumberish,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<BigNumber>;

    createCampaign(
      _beneficiary: string,
      _totalAmount: BigNumberish,
      _milestoneCount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    daoAddress(overrides?: CallOverrides): Promise<BigNumber>;

    escAccount(overrides?: CallOverrides): Promise<BigNumber>;

    getCampaignStatus(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDaoAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getMilestoneCount(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMilestoneDetails(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    rejectCampaign(
      _campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    releaseMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setDAOAddress(
      _daoAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setMilestoneStatus(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      _status: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    approveCampaign(
      _campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    calculateTotalContributionsForMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    campaignContributions(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    campaigns(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkAndAdvanceMilestone(
      campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    contributeToCampaign(
      _campaignId: BigNumberish,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    createCampaign(
      _beneficiary: string,
      _totalAmount: BigNumberish,
      _milestoneCount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    daoAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    escAccount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getCampaignStatus(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDaoAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMilestoneCount(
      _campaignId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMilestoneDetails(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rejectCampaign(
      _campaignId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    releaseMilestone(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setDAOAddress(
      _daoAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setMilestoneStatus(
      _campaignId: BigNumberish,
      _milestoneIndex: BigNumberish,
      _status: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
