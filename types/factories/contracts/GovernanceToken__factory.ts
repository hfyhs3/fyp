/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceToken,
  GovernanceTokenInterface,
} from "../../contracts/GovernanceToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s_maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405269d3c21bcecceda1000000600c553480156200002057600080fd5b506040518060400160405280600f81526020016e23b7bb32b93730b731b2aa37b5b2b760891b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600f81526020016e23b7bb32b93730b731b2aa37b5b2b760891b8152506040518060400160405280600281526020016111d560f21b8152508160039081620000b89190620008ab565b506004620000c78282620008ab565b50620000d99150839050600562000198565b61012052620000ea81600662000198565b61014052815160208084019190912060e052815190820120610100524660a0526200017860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250600c5462000192903390620001d1565b62000a2e565b6000602083511015620001b857620001b0836200027d565b9050620001cb565b81620001c58482620008ab565b5060ff90505b92915050565b620001dd8282620002c0565b6001600160e01b03620001f1620003918216565b11156200025e5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b62000277600b62000b4e6200039760201b1783620003ac565b50505050565b600080829050601f81511115620002ab578260405163305a27a960e01b815260040162000255919062000977565b8051620002b882620009c7565b179392505050565b6001600160a01b038216620003185760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000255565b80600260008282546200032c919062000a02565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200038d6000838362000539565b5050565b60025490565b6000620003a5828462000a02565b9392505050565b82546000908190818115620003fb5760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015262000410565b60408051808201909152600080825260208201525b905080602001516001600160e01b031693506200042e84868860201c565b92506000821180156200045b5750620004466200056d565b65ffffffffffff16816000015163ffffffff16145b15620004a4576200046c836200057f565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff9092169190911790556200052a565b866040518060400160405280620004d2620004c46200056d60201b60201c565b65ffffffffffff16620005ee565b63ffffffff168152602001620004e8866200057f565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b6001600160a01b03838116600090815260096020526040808220548584168352912054620005349291821691168362000655565b60006200057a4362000790565b905090565b60006001600160e01b03821115620005ea5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000255565b5090565b600063ffffffff821115620005ea5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000255565b816001600160a01b0316836001600160a01b031614158015620006785750600081115b1562000534576001600160a01b0383161562000705576001600160a01b0383166000908152600a6020908152604082208291620006c29190620007f9901b62000b5a1785620003ac565b91509150846001600160a01b0316600080516020620029698339815191528383604051620006fa929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161562000534576001600160a01b0382166000908152600a602090815260408220829162000749919062000397901b62000b4e1785620003ac565b91509150836001600160a01b031660008051602062002969833981519152838360405162000781929190918252602082015260400190565b60405180910390a25050505050565b600065ffffffffffff821115620005ea5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b606482015260840162000255565b6000620003a5828462000a18565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200083257607f821691505b6020821081036200085357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200053457600081815260208120601f850160051c81016020861015620008825750805b601f850160051c820191505b81811015620008a3578281556001016200088e565b505050505050565b81516001600160401b03811115620008c757620008c762000807565b620008df81620008d884546200081d565b8462000859565b602080601f831160018114620009175760008415620008fe5750858301515b600019600386901b1c1916600185901b178555620008a3565b600085815260208120601f198616915b82811015620009485788860151825594840194600190910190840162000927565b5085821015620009675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620009a65785810183015185820160400152820162000988565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620008535760001960209190910360031b1b16919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620001cb57620001cb620009ec565b81810381811115620001cb57620001cb620009ec565b60805160a05160c05160e051610100516101205161014051611ee062000a89600039600061065b0152600061063001526000610f8801526000610f6001526000610ebb01526000610ee501526000610f0f0152611ee06000f3fe608060405234801561001057600080fd5b506004361061016e5760003560e01c806370a08231116100ce5780639ab24eb0116100875780639ab24eb014610320578063a457c2d714610333578063a9059cbb14610346578063c3cda52014610359578063d505accf1461036c578063dd62ed3e1461037f578063f1127ed81461039257600080fd5b806370a082311461028f5780637ecebe00146102b857806384b0196e146102cb5780638e539e8c146102e657806391ddadf4146102f957806395d89b411461031857600080fd5b8063395093511161012b57806339509351146101f05780633a46b1a8146102035780634bf5d7e914610216578063587cde1e1461021e5780635c19a95c146102495780635d6418471461025e5780636fcfff451461026757600080fd5b806306fdde0314610173578063095ea7b31461019157806318160ddd146101b457806323b872dd146101c6578063313ce567146101d95780633644e515146101e8575b600080fd5b61017b6103cf565b6040516101889190611afe565b60405180910390f35b6101a461019f366004611b2d565b610461565b6040519015158152602001610188565b6002545b604051908152602001610188565b6101a46101d4366004611b57565b61047b565b60405160128152602001610188565b6101b861049f565b6101a46101fe366004611b2d565b6104ae565b6101b8610211366004611b2d565b6104d0565b61017b610532565b61023161022c366004611b93565b6105ca565b6040516001600160a01b039091168152602001610188565b61025c610257366004611b93565b6105e8565b005b6101b8600c5481565b61027a610275366004611b93565b6105f5565b60405163ffffffff9091168152602001610188565b6101b861029d366004611b93565b6001600160a01b031660009081526020819052604090205490565b6101b86102c6366004611b93565b610617565b6102d3610622565b6040516101889796959493929190611bae565b6101b86102f4366004611c44565b6106ab565b6103016106e6565b60405165ffffffffffff9091168152602001610188565b61017b6106f1565b6101b861032e366004611b93565b610700565b6101a4610341366004611b2d565b610781565b6101a4610354366004611b2d565b6107fc565b61025c610367366004611c6e565b61080a565b61025c61037a366004611cc6565b61093c565b6101b861038d366004611d30565b610aa0565b6103a56103a0366004611d63565b610acb565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610188565b6060600380546103de90611da3565b80601f016020809104026020016040519081016040528092919081815260200182805461040a90611da3565b80156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b5050505050905090565b60003361046f818585610b66565b60019150505b92915050565b600033610489858285610c8a565b610494858585610d04565b506001949350505050565b60006104a9610eae565b905090565b60003361046f8185856104c18383610aa0565b6104cb9190611ded565b610b66565b60006104da6106e6565b65ffffffffffff1682106105095760405162461bcd60e51b815260040161050090611e00565b60405180910390fd5b6001600160a01b0383166000908152600a6020526040902061052b9083610fd9565b9392505050565b60604361053d6106e6565b65ffffffffffff16146105925760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606401610500565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b6001600160a01b039081166000908152600960205260409020541690565b6105f233826110c1565b50565b6001600160a01b0381166000908152600a602052604081205461047590611157565b6000610475826111c0565b6000606080828080836106567f000000000000000000000000000000000000000000000000000000000000000060056111de565b6106817f000000000000000000000000000000000000000000000000000000000000000060066111de565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006106b56106e6565b65ffffffffffff1682106106db5760405162461bcd60e51b815260040161050090611e00565b610475600b83610fd9565b60006104a943611289565b6060600480546103de90611da3565b6001600160a01b0381166000908152600a6020526040812054801561076e576001600160a01b0383166000908152600a602052604090208054600019830190811061074d5761074d611e33565b600091825260209091200154600160201b90046001600160e01b0316610771565b60005b6001600160e01b03169392505050565b6000338161078f8286610aa0565b9050838110156107ef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610500565b6104948286868403610b66565b60003361046f818585610d04565b8342111561085a5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610500565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906108d4906108cc9060a001604051602081830303815290604052805190602001206112f0565b85858561131d565b90506108df81611345565b86146109295760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610500565b61093381886110c1565b50505050505050565b8342111561098c5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610500565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109bb8c611345565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a16826112f0565b90506000610a268287878761131d565b9050896001600160a01b0316816001600160a01b031614610a895760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610500565b610a948a8a8a610b66565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff8416908110610b0f57610b0f611e33565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b600061052b8284611ded565b600061052b8284611e49565b6001600160a01b038316610bc85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610500565b6001600160a01b038216610c295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610500565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c968484610aa0565b90506000198114610cfe5781811015610cf15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610500565b610cfe8484848403610b66565b50505050565b6001600160a01b038316610d685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610500565b6001600160a01b038216610dca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610500565b6001600160a01b03831660009081526020819052604090205481811015610e425760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610500565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610cfe848484611372565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f0757507f000000000000000000000000000000000000000000000000000000000000000046145b15610f3157507f000000000000000000000000000000000000000000000000000000000000000090565b6104a9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b815460009081816005811115611033576000610ff48461138d565b610ffe9085611e49565b600088815260209020909150869082015463ffffffff16111561102357809150611031565b61102e816001611ded565b92505b505b808210156110805760006110478383611475565b600088815260209020909150869082015463ffffffff16111561106c5780915061107a565b611077816001611ded565b92505b50611033565b80156110ab5760008681526020902081016000190154600160201b90046001600160e01b03166110ae565b60005b6001600160e01b03169695505050505050565b60006110cc836105ca565b905060006110ef846001600160a01b031660009081526020819052604090205490565b6001600160a01b0385811660008181526009602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610cfe828483611490565b600063ffffffff8211156111bc5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610500565b5090565b6001600160a01b038116600090815260076020526040812054610475565b606060ff83146111f8576111f1836115cd565b9050610475565b81805461120490611da3565b80601f016020809104026020016040519081016040528092919081815260200182805461123090611da3565b801561127d5780601f106112525761010080835404028352916020019161127d565b820191906000526020600020905b81548152906001019060200180831161126057829003601f168201915b50505050509050610475565b600065ffffffffffff8211156111bc5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610500565b60006104756112fd610eae565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600061132e8787878761160c565b9150915061133b816116c6565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b61136d61137e846105ca565b611387846105ca565b83611490565b60008160000361139f57506000919050565b600060016113ac8461180b565b901c6001901b905060018184816113c5576113c5611e5c565b048201901c905060018184816113dd576113dd611e5c565b048201901c905060018184816113f5576113f5611e5c565b048201901c9050600181848161140d5761140d611e5c565b048201901c9050600181848161142557611425611e5c565b048201901c9050600181848161143d5761143d611e5c565b048201901c9050600181848161145557611455611e5c565b048201901c905061052b8182858161146f5761146f611e5c565b0461189f565b60006114846002848418611e72565b61052b90848416611ded565b816001600160a01b0316836001600160a01b0316141580156114b25750600081115b1561136d576001600160a01b03831615611540576001600160a01b0383166000908152600a6020526040812081906114ed90610b5a856118b5565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611535929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161561136d576001600160a01b0382166000908152600a60205260408120819061157690610b4e856118b5565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516115be929190918252602082015260400190565b60405180910390a25050505050565b606060006115da83611a27565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561163957506000905060036116bd565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561168d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116b6576000600192509250506116bd565b9150600090505b94509492505050565b60008160048111156116da576116da611e94565b036116e25750565b60018160048111156116f6576116f6611e94565b0361173e5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610500565b600281600481111561175257611752611e94565b0361179f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610500565b60038160048111156117b3576117b3611e94565b036105f25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610500565b600080608083901c1561182057608092831c92015b604083901c1561183257604092831c92015b602083901c1561184457602092831c92015b601083901c1561185657601092831c92015b600883901c1561186857600892831c92015b600483901c1561187a57600492831c92015b600283901c1561188c57600292831c92015b600183901c156104755760010192915050565b60008183106118ae578161052b565b5090919050565b825460009081908181156119015760008781526020902082016000190160408051808201909152905463ffffffff81168252600160201b90046001600160e01b03166020820152611916565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061193684868863ffffffff16565b9250600082118015611960575061194b6106e6565b65ffffffffffff16816000015163ffffffff16145b156119a45761196e83611a4f565b60008881526020902083016000190180546001600160e01b0392909216600160201b0263ffffffff909216919091179055611a1d565b8660405180604001604052806119c86119bb6106e6565b65ffffffffffff16611157565b63ffffffff1681526020016119dc86611a4f565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b5050935093915050565b600060ff8216601f81111561047557604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b038211156111bc5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610500565b6000815180845260005b81811015611ade57602081850181015186830182015201611ac2565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061052b6020830184611ab8565b80356001600160a01b0381168114611b2857600080fd5b919050565b60008060408385031215611b4057600080fd5b611b4983611b11565b946020939093013593505050565b600080600060608486031215611b6c57600080fd5b611b7584611b11565b9250611b8360208501611b11565b9150604084013590509250925092565b600060208284031215611ba557600080fd5b61052b82611b11565b60ff60f81b881681526000602060e081840152611bce60e084018a611ab8565b8381036040850152611be0818a611ab8565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611c3257835183529284019291840191600101611c16565b50909c9b505050505050505050505050565b600060208284031215611c5657600080fd5b5035919050565b803560ff81168114611b2857600080fd5b60008060008060008060c08789031215611c8757600080fd5b611c9087611b11565b95506020870135945060408701359350611cac60608801611c5d565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611ce157600080fd5b611cea88611b11565b9650611cf860208901611b11565b95506040880135945060608801359350611d1460808901611c5d565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611d4357600080fd5b611d4c83611b11565b9150611d5a60208401611b11565b90509250929050565b60008060408385031215611d7657600080fd5b611d7f83611b11565b9150602083013563ffffffff81168114611d9857600080fd5b809150509250929050565b600181811c90821680611db757607f821691505b60208210810361136757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561047557610475611dd7565b60208082526019908201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8181038181111561047557610475611dd7565b634e487b7160e01b600052601260045260246000fd5b600082611e8f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205fa1f0669a1ec3e057b8f7f2c5b6e0f4795cba99fc3214005413731365cbb1f264736f6c63430008130033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type GovernanceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceToken__factory extends ContractFactory {
  constructor(...args: GovernanceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GovernanceToken> {
    return super.deploy(overrides || {}) as Promise<GovernanceToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernanceToken {
    return super.attach(address) as GovernanceToken;
  }
  override connect(signer: Signer): GovernanceToken__factory {
    return super.connect(signer) as GovernanceToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTokenInterface {
    return new utils.Interface(_abi) as GovernanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceToken {
    return new Contract(address, _abi, signerOrProvider) as GovernanceToken;
  }
}
